Script started on 2022-09-18 19:57:37-06:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="98" LINES="16"]
os1[1]% make clean
rm -f *.o
os1[2]% \[Kmake valgrind
gcc -c -ggdb main.c
gcc -c -ggdb functions.c
gcc main.o functions.o -o demo
valgrind --leak-check=yes ./demo
==3003834== Memcheck, a memory error detector
==3003834== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3003834== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3003834== Command: ./demo
==3003834== 
How big is the array? ^C==3003834== 
==3003834== Process terminating with default action of signal 2 (SIGINT)
==3003834==    at 0x495FFD2: read (read.c:26)
==3003834==    by 0x48E2B9E: _IO_file_underflow@@GLIBC_2.2.5 (fileops.c:517)
==3003834==    by 0x48E3F85: _IO_default_uflow (genops.c:362)
==3003834==    by 0x48B627F: __vfscanf_internal (vfscanf-internal.c:627)
==3003834==    by 0x48B5161: __isoc99_scanf (isoc99_scanf.c:30)
==3003834==    by 0x1092A1: main (main.c:13)
==3003834== 
==3003834== HEAP SUMMARY:
==3003834==     in use at exit: 0 bytes in 0 blocks
==3003834==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==3003834== 
==3003834== All heap blocks were freed -- no leaks are possible
==3003834== 
==3003834== For lists of detected and suppressed errors, rerun with: -s
==3003834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
make: *** [makefile:35: valgrind] Interrupt

os1[3]% gdb ./demo
[35;1m[35;1mGNU gdb [m[35;1m(Ubuntu 9.2-0ubuntu1~20.04.1) [m[35;1m9.2[m[35;1m
[m[mCopyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
[m--Type <RET> for more, q to quit, c to continue without paging--break[K[K[K[K[Kc
Reading symbols from [32m./demo[m...
(gdb) break functions:return<[KMin
No source file named functions.
Make breakpoint pending on future shared library load? (y or [n]) 
(gdb) break functions.c:returnMin
Breakpoint 1 at [34m0x13b8[m: file [32mfunctions.c[m, line 44.
(gdb) run
Starting program: /home/hercules/j/jls273/cs330/lab2/demo 
How big is the array? 50

Breakpoint 1, [33mreturnMin[m ([36marray[m=0x555555559ac0, [36mlength[m=50, [36mmin[m=0x55555555536a <initialize+45>)[m
   [m at [32mfunctions.c[m:44
44	{
(gdb) print array[0]@length
$1 = {408, 332, 255, 238, 357, 431, 46, 48, 195, 234, 385, 389, 142, 35, 324, 167, 227, 56, 322, [m
  [m126, 49, 400, 114, 475, 484, 65, 307, 149, 256, 4, 473, 164, 113, 228, 180, 469, 159, 225, 17, [m
  [m131, 236, 179, 297, 377, 213, 398, 44, 218, 453, 143}
(gdb) print min
$2 = (int *) [34m0x55555555536a[m <[33minitialize[m+45>
(gdb) print *min
$3 = 1221616456
(gdb) n
47	  *min = array[0];
(gdb) n
48	  for (i = 1; i < length; i++)
(gdb) print min
$4 = (int *) [34m0x7fffffffe6a8[m
(gdb) m[Kprint *min
$5 = 408
(gdb) until [K
50	    if (*min > array[i])
(gdb) print *min
$6 = 408
(gdb) until
52	      *min = array[i];
(gdb) until
48	  for (i = 1; i < length; i++)
(gdb) until
56	  return 0;
(gdb) print *min
$7 = 4
(gdb) n
57	}
(gdb) n
[33mmain[m ([36margc[m=1, [36margv[m=0x7fffffffe7b8) at [32mmain.c[m:21
21	  if (returnMin(array, size, &min) != 0)
(gdb) n
26	  printf("min value in array is: %d\n", min);
(gdb) n
min value in array is: 4
28	  free(array);
(gdb) n
30	  exit(0);
(gdb) n
[Inferior 1 (process 3004386) exited normally]
(gdb) quit
os1[4]% exit
exit

Script done on 2022-09-18 20:16:32-06:00 [COMMAND_EXIT_CODE="0"]
